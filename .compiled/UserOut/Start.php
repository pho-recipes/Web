<?php

namespace PhoNetworksAutogenerated\UserOut 
{

use Pho\Kernel\Traits\Edge\PersistentTrait;
use Pho\Framework;
use Pho\Kernel\Foundation;



/*****************************************************
 * This file was auto-generated by pho-compiler
 * For more information, visit http://phonetworks.org
 ******************************************************/

class Start extends Foundation\ActorOut\Write {

    
    use PersistentTrait;
    

    const HEAD_LABEL = "thread";
    const HEAD_LABELS = "threads";
    const TAIL_LABEL = "author";
    const TAIL_LABELS = "authors";
    
    const TAIL_CALLABLE_LABEL = "";
    const TAIL_CALLABLE_LABELS = "";
    const HEAD_CALLABLE_LABEL = "";
    const HEAD_CALLABLE_LABELS = "";

    const FEED_SIMPLE_LABEL = "[%tail.username%|%tail.id%] started a new thread [%head.title%|%head.id%]";
    const FEED_AGGREGATED_LABEL = "%tail.username% started new threads";
    

    const FORMABLES = [\PhoNetworksAutogenerated\Thread::class];
    


}

/* Predicate to load as a partial */
class StartPredicate extends Foundation\ActorOut\WritePredicate
{
    protected $binding = true;
    protected $multiplicable = false;
    
    const T_CONSUMER = true;
    const T_NOTIFIER = false;
    const T_SUBSCRIBER = false;
    const T_FORMATIVE = true;
    const T_PERSISTENT = true;
}
/* Notification to load if it's a subtype of write or mention. */
class StartNotification extends Foundation\ActorOut\WriteNotification
{

}
}

/*****************************************************
 * Timestamp: 
 * Size (in bytes): 1675
 * Compilation Time: 31
 * 1ba0816d8776dcf3f4d85e768e6b1e87
 ******************************************************/